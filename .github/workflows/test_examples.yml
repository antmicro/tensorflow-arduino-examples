name: Arduino examples tests
on:
  push:
    paths:
      - 'tensorflow/**'
      - 'examples/*/*.robot'
      - 'examples/*/build.sh'
      - '.github/**'
  pull_request:
    paths:
      - 'tensorflow/**'
      - 'examples/*/*.robot'
      - 'examples/*/build.sh'
      - '.github/workflows/test_examples.yml'
  workflow_dispatch:

env:
  GH_SERVICE_ACCOUNT_NAME: "tflite-bot"
  GH_SERVICE_ACCOUNT_EMAIL: "tflite-bot@antmicro.com"
  GH_SERVICE_ACCOUNT_TOKEN: ${{ secrets.GH_SERVICE_ACCOUNT_TOKEN }}
  GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  DISTANT_RS_BUCKET: ${{ secrets.DISTANT_RS_BUCKET }}

jobs:
  test:
    runs-on: ubuntu-18.04
    env:
      METRICS_VISUALIZER: renode/tools/metrics_analyzer/metrics_visualizer/metrics-visualizer.py
      TENSORFLOW_PATH: "${{ github.workspace }}/tensorflow"
    steps:
      - name: Configure git
        run: |
          git config --global user.name $GH_SERVICE_ACCOUNT_NAME
          git config --global user.email $GH_SERVICE_ACCOUNT_EMAIL

      - name: Configure GCP token
        run: |
          echo "$GTOKEN" | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> $GITHUB_ENV
        env:
          GTOKEN: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}
          GOOGLE_APPLICATION_CREDENTIALS: "${{ runner.temp }}/google_sa.json"
        
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2

      - name: Set Up Renode
        run: |
          mkdir -p renode
          cd renode
          wget https://dl.antmicro.com/projects/renode/builds/renode-latest.linux-portable.tar.gz
          tar -xzf renode-latest.linux-portable.tar.gz --strip 1
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r $GITHUB_WORKSPACE/renode/tests/requirements.txt
          pip install -r $GITHUB_WORKSPACE/renode/tools/metrics_analyzer/metrics_visualizer/requirements.txt
          pip install git+https://github.com/antmicro/distant-rs.git

      - name: Open Invocation
        run: $GITHUB_WORKSPACE/.github/scripts/manage_invocation.py open

      - name: Test person-detection
        run: |
          cd examples/person-detection
          ./build.sh
          $GITHUB_WORKSPACE/.github/scripts/test_and_publish.py *.robot

      - name: Upload person-detection artifacts
        uses: actions/upload-artifact@v2
        with:
          name: person_detection_artifacts
          path: |
            examples/person-detection/report.html
            examples/person-detection/log.html
            examples/person-detection/robot_output.xml
            examples/person-detection/person_detection.dump
            examples/person-detection/*_graphs

      - name: Test magic-wand
        run: |
          cd examples/magic-wand
          ./build.sh
          $GITHUB_WORKSPACE/.github/scripts/test_and_publish.py *.robot

      - name: Upload magic-wand artifacts
        uses: actions/upload-artifact@v2
        with:
          name: magic_wand_artifacts
          path: |
            examples/magic-wand/report.html
            examples/magic-wand/log.html
            examples/magic-wand/robot_output.xml
            examples/magic-wand/*.dump
            examples/magic-wand/*_graphs

      - name: Test hello-world
        run: |
          cd examples/hello-world
          ./build.sh
          $GITHUB_WORKSPACE/.github/scripts/test_and_publish.py *.robot

      - name: Upload hello-world artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hello_world_artifacts
          path: |
            examples/hello-world/report.html
            examples/hello-world/log.html
            examples/hello-world/robot_output.xml
            examples/hello-world/*.dump
            examples/hello-world/*_graphs

      - name: Test micro-speech
        run: |
          cd examples/micro-speech
          ./build.sh
          $GITHUB_WORKSPACE/.github/scripts/test_and_publish.py *.robot

      - name: Upload micro-speech artifacts
        uses: actions/upload-artifact@v2
        with:
          name: micro_speech_artifacts
          path: |
            examples/micro-speech/report.html
            examples/micro-speech/log.html
            examples/micro-speech/robot_output.xml
            examples/micro-speech/*.dump
            examples/micro-speech/*_graphs

      - name: Close Invocation (failed)
        if: ${{ failure() || cancelled() }}
        run: $GITHUB_WORKSPACE/.github/scripts/manage_invocation.py close 1

      - name: Close Invocation (success)
        run: $GITHUB_WORKSPACE/.github/scripts/manage_invocation.py close 0

      - name: Print Invocation URL
        if: ${{ always() }}
        run: $GITHUB_WORKSPACE/.github/scripts/manage_invocation.py print_url

      - name: Upload binaries
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          git clone https://github.com/antmicro/tensorflow-arduino-examples-binaries.git
          cp -r examples/*/binaries/* tensorflow-arduino-examples-binaries
          cd tensorflow-arduino-examples-binaries
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Upload binaries";
            git push -u https://$GH_SERVICE_ACCOUNT_NAME:$GH_SERVICE_ACCOUNT_TOKEN@github.com/antmicro/tensorflow-arduino-examples-binaries.git master
          else
            echo "no changes";
          fi

  test_finalize:
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - name: Set Up Python
        uses: actions/setup-python@v2

      - name: Configure GCP token
        run: |
          echo "$GTOKEN" | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> $GITHUB_ENV
        env:
          GTOKEN: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}
          GOOGLE_APPLICATION_CREDENTIALS: "${{ runner.temp }}/google_sa.json"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install git+https://github.com/antmicro/distant-rs.git

      - name: Get jobs
        run: curl $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/jobs -u $GH_SERVICE_ACCOUNT_NAME:GH_SERVICE_ACCOUNT_TOKEN | jq
