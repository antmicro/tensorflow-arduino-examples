name: Generate ipynb files
on:
  push:
    branches: [ master ]
    paths:
    - 'examples/*/*.py'
    - 'examples/*/build.sh'
    - '.github/workflows/generate_ipynb_files.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      GH_SERVICE_ACCOUNT_NAME: "tflite-bot"
      GH_SERVICE_ACCOUNT_EMAIL: "tflite-bot@antmicro.com"
      GH_SERVICE_ACCOUNT_TOKEN: ${{ secrets.GH_SERVICE_ACCOUNT_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupytext

      - name: Generate person-detection ipynb
        # we want the script logic to be included in the resulting ipynb to avoid downloading build.sh in notebook execution
        run: |
          cd examples/person-detection
          cp person_detection.py person_detection_build_binary.py
          $GITHUB_WORKSPACE/.github/scripts/prepare_build_for_notebook.sh
          sed -i $'/fetch prebuilt binaries/{r build.sh\n d}' person_detection_build_binary.py
          jupytext --to ipynb person_detection.py person_detection_build_binary.py

      - name: Generate magic-wand ipynb
        run: |
          cd examples/magic-wand
          cp magic_wand.py magic_wand_build_binary.py
          $GITHUB_WORKSPACE/.github/scripts/prepare_build_for_notebook.sh
          sed -i $'/fetch prebuilt binaries/{r build.sh\n d}' magic_wand_build_binary.py
          jupytext --to ipynb magic_wand.py magic_wand_build_binary.py

      - name: Generate hello-world ipynb
        run: |
          cd examples/hello-world
          cp hello_world.py hello_world_build_binary.py
          $GITHUB_WORKSPACE/.github/scripts/prepare_build_for_notebook.sh
          sed -i $'/fetch prebuilt binaries/{r build.sh\n d}' hello_world_build_binary.py
          jupytext --to ipynb hello_world.py hello_world_build_binary.py
          
      - name: Generate micro-speech ipynb
        run: |
          cd examples/micro-speech
          cp micro_speech.py micro_speech_build_binary.py
          $GITHUB_WORKSPACE/.github/scripts/prepare_build_for_notebook.sh
          sed -i $'/fetch prebuilt binaries/{r build.sh\n d}' micro_speech_build_binary.py
          jupytext --to ipynb micro_speech.py micro_speech_build_binary.py

      - name: Configure git
        run: |
          git config --global user.name $GH_SERVICE_ACCOUNT_NAME
          git config --global user.email $GH_SERVICE_ACCOUNT_EMAIL

      - name: Commit and push
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          git add examples/*/*.ipynb
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Generate ipynb files";
            git push -u https://$GH_SERVICE_ACCOUNT_NAME:$GH_SERVICE_ACCOUNT_TOKEN@github.com/antmicro/tensorflow-arduino-examples.git master
          else
            echo "no changes";
          fi